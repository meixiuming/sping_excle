#服务端口
server.port= 8080
#z注册到eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

#数据库连接
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/liu?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=630227
spring.datasource.driverClassName=com.mysql.jdbc.Driver

## 更多数据源
#custom.datasource.names=ds1,ds2
#custom.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
#custom.datasource.ds1.url=jdbc:mysql://localhost:3306/test1
#custom.datasource.ds1.username=root
#custom.datasource.ds1.password=630227
#custom.datasource.ds1.filters=stat,wall,log4j

## 是否显示 SQL 语句
spring.jpa.show-sql=true

## Mybatis 配置
mybatis.type-aliases-package==com.excle.domain
mybatis.mapper-locations=classpath:mapper/*.xml

# 连接池的配置信息
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
 # 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat= true